name: Closed PR jobs
on:
  pull_request:
    types: [closed]
    branches: [master, develop]

permissions:
  contents: write
  pull-requests: write

jobs:
  version_bump:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # this is required for the action to be able to see tags

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          sudo apt-get install jq

      - name: Analyze PR and determine version bump
        id: pr_analysis
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_INFO=$(curl -L   -H "Accept: application/vnd.github+json"   -H "Authorization: Bearer $GH_TOKEN"  -H "X-GitHub-Api-Version: 2022-11-28"   https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)
          LABELS=$(jq --argjson data "$PR_INFO" '.labels[].name' <<< "$PR_INFO")
          if [[ "${{ github.event.pull_request.base.ref }}" == "master" ]] && echo "$LABELS" | grep -q "major"; then
            echo "::set-output name=version_bump::major"
          elif [[ "${{ github.event.pull_request.base.ref }}" == "master" ]]; then
            echo "::set-output name=version_bump::minor"
          else
            echo "::set-output name=version_bump::patch"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}


      - name: Bump version and push tag
        id: package
        run: |
          git config --local user.email "business.daniel.mass@gmail.com"
          git config --local user.name "Daniel Mass"
          npm version ${{ steps.pr_analysis.outputs.version_bump }} -m "Upgrade to %s"
          git push
          git push --tags
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
  
  internal_release_creation:
    runs-on: ubuntu-latest
    needs: version_bump
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g eas-cli

      - name: Fetch Labels
        id: fetch_labels
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_INFO=$(curl -L   -H "Accept: application/vnd.github+json"   -H "Authorization: Bearer $GH_TOKEN"  -H "X-GitHub-Api-Version: 2022-11-28"   https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)
          LABELS=$(jq --argjson data "$PR_INFO" '.labels[].name' <<< "$PR_INFO")
          echo "::set-output name=labels::$LABELS"
        env:
          GH_TOKEN: ${{ secrets.PR_LABEL_PAT }}

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_EAS_TOKEN }}

      - name: Create Release
        id: create_release
        run: |
          if [[ echo "${{ needs.fetch_labels.outputs.labels }}" | grep -q "ios" ]]; then
            eas build --platform ios --profile preview --non-interactive --no-wait 
          elif [[ echo "${{ needs.fetch_labels.outputs.labels }}" | grep -q "android" ]]; then
            eas build --platform android --profile preview --non-interactive --no-wait 
          fi
